
/* Controltag Loader for Next Digital */
(function(){
  var debugging = /kxdebug/.test(location);
  var log = function() {
    // It's a flag, so if it's there, then it means debug.
    debugging && window.console && console.log([].slice.call(arguments).join(' '));
  };

  var load = function(url, callback) {
    log('Loading script from:', url);
    var node = document.createElement('script');
    node.async = true;  // This is just to be friendly.
    node.src = url;

    // Connect to both in case we're in older IE.
    node.onload = node.onreadystatechange = function() {
      var state = node.readyState;
      if (!callback.done && (!state || /loaded|complete/.test(state))) {
        log('Script loaded from:', url);
        callback.done = true;  // Mark the callback, so we don't load it twice on accident.
        callback();
      }
    };

    // Fetch the first script element, so we can insert the
    // controltag before it. There *must* be at least one
    // script element, or this code would never be called
    var sibling = document.getElementsByTagName('script')[0];
    sibling.parentNode.insertBefore(node, sibling);
  };

  // ControlTag simply crashes when opening a website from Twitter browser on
  // iOS, temporarily disable CT when Twitter for iPhone is detected until they
  // fix this (works fine with other twitter client though)
  if (/Twitter for iPhone/.test(window.navigator.userAgent || '')) return;

  var config = {"partner_segment_map": {}, "context_terms": [], "tags": [{"content": "<script type=\"text/javascript\">Krux('social.init');</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "internal": 1, "template_replacement": 1, "execution_results": null, "tier": 1, "library_tag_config": {}, "content_type": "html", "timing": "onload", "method": "document", "type": "library", "id": 33160, "name": "Krux Track Social"}, {"content": "<script>\r\n// this tag is intentionally blank\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 6, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "data provider", "id": 33161, "name": "Technographic Data provider tag"}, {"content": "", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 14, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "id": 33162, "name": "Krux Geographic Data provider tag"}, {"content": "<script>\r\n(function(){\r\n  if (window.Krux) {\r\n    var kuid = window.Krux('get', 'user');\r\n    if (kuid && typeof kuid != 'undefined') {\r\n       var rubicon_url = '//tap.rubiconproject.com/oz/feeds/krux/tokens?afu=' + kuid;\r\n       var i = new Image();\r\n       i.src = rubicon_url;\r\n    }\r\n  }\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 1, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "publisher", "id": 73877, "name": "Rubicon User Matching"}, {"content": "<script>\r\n(function(){\r\n\t// customise only if necessary\r\n\tvar client_var = 'app_gigyaId';\r\n\r\n\t// so we know if we need toi do a pageload or not later\r\n\tvar pixelFired = false;\r\n\tKrux('onOnce:pixel', function() {pixelFired = true;});\r\n\r\n\tvar myUID = \"\";\r\n\tfunction userAccount(response) { \r\n\t\tmyUID = response.UID;\r\n\t\tif (myUID) {\r\n\t\t\tKrux('set','user_attr_'+client_var,myUID);\r\n\t\t\tif(pixelFired === true){\r\n\t\t\t\t// send the data\r\n\t\t\t\tKrux('require:pixel').send('', false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif(window.gigya && window.gigya.accounts && typeof window.gigya.accounts.getAccountInfo === 'function'){\r\n\t\twindow.gigya.accounts.getAccountInfo({ callback : userAccount});\r\n\t}\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": 1, "content_type": "html", "timing": "onload", "method": "document", "type": "publisher", "id": 86747, "name": "Gigya ID DTC"}, {"content": "<script>\r\n(function() {\r\n\r\nKrux('scrape', {\r\n  'page_attr_section': {meta_name: 'section'},\r\n  'section': {meta_name: 'section'},\r\n  'page_attr_subsection': {meta_name: 'subsection'},\r\n  'subsection': {meta_name: 'subsection'},\r\n  'page_attr_tags': {meta_name: 'taglist'},\r\n});\r\n\r\nvar kruxsubsection = Krux('get', 'page_attr_subsection');\r\n\r\n\r\n\r\nif (typeof kruxsubsection === 'undefined' || kruxsubsection == null) {\r\n   Krux('set', {'page_attr_ssec': Krux('get', 'page_attr_section')});\r\n}\r\nelse {\r\n   if (kruxsubsection[kruxsubsection.length - 1] == \"\\\\\") {\r\n     kruxsubsection = kruxsubsection.substring(0, kruxsubsection.length -1);\r\n     Krux('set', {\r\n       'subsection': kruxsubsection,\r\n       'page_attr_subsection': kruxsubsection\r\n     });\r\n   }\r\n\r\n   Krux('set', {'page_attr_ssec': Krux('get', 'page_attr_section') + '_' + kruxsubsection});\r\n\r\n}\r\n\r\ntitle = document.getElementsByTagName('title');\r\nif (title.length != 0) {\r\n  title = title[0];\r\n  Krux('scrape', {'page_attr_title': {meta_property: 'og:title'}});\r\n  parts = title.text.split(\"|\");\r\n\r\n  found = \"\";\r\n  kws = parts[0].split('\u3011');\r\n  if (kws.length > 1) {\r\n    for (i = 0; i < kws.length - 1; i++) {\r\n      if (kws[i].indexOf('\u3010') >= 0) {\r\n        if (found.length > 0) found += \", \";\r\n        found += kws[i].substring(kws[i].indexOf('\u3010') + 1, kws[i].length);\r\n      }\r\n    }\r\n    Krux('set', {'page_attr_kw': found});\r\n  }\r\n}\r\n\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": 1, "content_type": "html", "timing": "onready", "method": "document", "type": "publisher", "id": 33881, "name": "AppleDaily DTC"}], "buckets": [], "publisher": {"uuid": "568aeaaf-1da3-484f-ab0b-7422488f4717", "id": 12306, "name": "Next Digital"}, "controltag_options": {"async": "true", "render": true}, "site": {"id": 18641, "name": "AppleDaily HK - Main Site"}, "realtime_segments": [{"test": ["and", ["or", ["and", ["or", ["intersects", "$page_attr_ssec", "[\"\u4eca\u65e5\u860b\u679c_\u526f\u520a\\\\\u89aa\u5b50\", \"\u4eca\u65e5\u860b\u679c_\u526f\u520a\\\\\u89aa\u5b50\u5c08\u6b04\"]"]]]]], "id": "o1mzvxmpm"}, {"test": ["and", ["or", ["and", ["or", ["intersects", "$page_attr_app_tags:,", "[\"\u3010\u5373\u6642\u4ea4\u901a\u3011\"]"], ["intersects", "$page_attr_app_ssec", "[\"_\u5373\u6642\u8981\u805e\", \"_\u5373\u6642\u7a81\u767c\"]"], ["intersects", "$page_attr_app_section:,", "[\"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e/\u570b  \u969b/\", \"\u5373\u6642\u65b0\u805e/\u5169  \u5cb8/\", \"\u5373\u6642\u65b0\u805e/gadgets/\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u805e\", \"\u5373\u6642\u65b0\u804e\", \"\u5373\u6642\u65b0$e8\ufffd\ufffd\"]"]]]]], "id": "p46wnmuwy"}], "dnt": null, "params": {"connector_host": "connector.krxd.net", "first_party_uid": false, "control_tag_load_sync": "false", "userData_host": "cdn.krxd.net", "disable_http_compression": false, "remove_kxhead": true, "supertag_requires_approval": "false", "control_tag_namespace": null, "cdn_host": "cdn.krxd.net", "control_tag_stats_prefix": null, "optimize_realtime_segments": false, "beacon_host": "beacon.krxd.net", "control_tag_pixel_throttle": "100", "store_realtime_segments": false, "user_id_cookie": null, "max_segments": null, "no_pii": 0, "recommend": false, "revenue_optimization": false, "context_terms": "false", "jslog_host": "jslog.krxd.net", "buckets": "", "site_level_supertag_config": "site", "max_slot_time": 1000, "services_host": "apiservices.krxd.net", "capture_leakage": true, "client_side_storage": "localStorage,cookie", "fingerprint": false, "config_source": 1, "control_tag_version": "stable", "capture_js_errors": "true", "datatag_version": "3", "dfp_premium": "true", "userdata_host": "cdn.krxd.net", "user_data_timing": "load", "target_fingerprint": false}, "services": {"event": "//beacon.krxd.net/event.gif", "impression": "//beacon.krxd.net/ad_impression.gif", "stats": "//apiservices.krxd.net/stats", "log": "//jslog.krxd.net/jslog.gif", "optout": "//beacon.krxd.net/optout_check", "config": "//cdn.krxd.net/controltag?confid=", "pixel": "//beacon.krxd.net/pixel.gif", "um": "//apiservices.krxd.net/um", "contentConnector": "//connector.krxd.net/content_connector/", "proxy": "//cdn.krxd.net/partnerjs/xdi", "set_optin": "//apiservices.krxd.net/consumer/optin", "social": "//beacon.krxd.net/social.gif", "set_optout": "//apiservices.krxd.net/consumer/optout", "addSegment": "//cdn.krxd.net/userdata/add", "userData": "//cdn.krxd.net/userdata/get", "data": "//beacon.krxd.net/data.gif", "userdata": "//cdn.krxd.net/userdata/get", "is_optout": "//beacon.krxd.net/optout_check"}, "geo": {}, "segments": [], "confid": "JVAfKJb0"};

  // Wrap in a function and comment, then toString the func and replace
  // everything that's not the beginning or end of a JSON object, so we get a
  // string that's either empty or JSON.
  var esiGeo = String(function(){/*
    <esi:include src="/geoip_esi"/>
  */}).replace(/^.*\/\*[^{]+|[^}]+\*\/.*$/g, '');

  if (esiGeo) {
    log('Got a request for:', esiGeo, 'adding geo to config.');
    try {
      config.geo = window.JSON.parse(esiGeo);
    } catch (__) {
      // Couldn't parse, so setting to {}
      log('Unable to parse geo from:', config.geo);
      config.geo = {};
    }
  }

  
  
  

  load('//cdn.krxd.net/ctjs/controltag.js.6975db0bcdfe9bcab66e4f134af246b1', function() {
    
    
    log('Loading krux configuration.');

    Krux('config', config);

    
  });
})();
